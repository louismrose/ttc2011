/*******************************************************************************
 * Copyright (c) 2011 The University of York.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Louis Rose - initial API and implementation
 ******************************************************************************/
package simulator.execution.model;

import java.io.Serializable;

import simulator.config.Action;
import simulator.config.Button;
import simulator.config.Configuration;
import simulator.config.Mode;
import simulator.config.NextMode;

public class SimulationState implements Serializable {

	// Generated by Eclipse
	private static final long serialVersionUID = 8378817217535302346L;
	
	private int currentModeIndex = 0;
	private String currentModeName;
	
	public SimulationState(Configuration config) {
		currentModeName = config.getModes().get(0).getName();
	}
	
	public String getCurrentMode() {
		return currentModeName;
	}
	
	public void pressButton(Configuration config, int buttonIndex) {
		final Button button = getCurrentMode(config).getButtons().get(buttonIndex);
		
		run(config, button.getBehaviour());
	}

	private Mode getCurrentMode(Configuration config) {
		return config.getModes().get(currentModeIndex);
	}
	
	private void run(Configuration config, Action behaviour) {
		if (behaviour instanceof NextMode) {
			currentModeIndex = (currentModeIndex + 1) % config.getModes().size();
			currentModeName  = config.getModes().get(currentModeIndex).getName();
		}
	}
	
}
