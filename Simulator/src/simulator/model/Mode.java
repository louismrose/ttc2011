/*******************************************************************************
 * Copyright (c) 2011 The University of York.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Louis Rose - initial API and implementation
 ******************************************************************************/
package simulator.model;

import java.io.Serializable;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;

public class Mode implements Serializable {

	// Generated by Eclipse
	private static final long serialVersionUID = -4160553329504282481L;	
	
	private final String name;
	private final List<ButtonBehaviour> buttonBehaviours;
	private final List<EntryAction> entryActions;
	
	private Watch watch;
	
	
	public Mode(String name, ButtonBehaviour... buttonBehaviours) {
		this.name = name;
		this.buttonBehaviours = Arrays.asList(buttonBehaviours);
		this.entryActions = new LinkedList<EntryAction>();
	}
	
	public Mode(simulator.config.Mode mode) {
		this.name = mode.getName();
		this.buttonBehaviours = new LinkedList<ButtonBehaviour>();
		this.entryActions = new LinkedList<EntryAction>();
		
		for (simulator.config.ButtonBehaviour behaviour : mode.getButtonBehaviours()) {
			final ButtonBehaviour buttonBehaviour;
			
			if (behaviour instanceof simulator.config.AlarmButtonBehaviour) {
				buttonBehaviour = new AlarmButtonBehaviour();
			
			} else if (behaviour instanceof simulator.config.DisplayButtonBehaviour) {
				buttonBehaviour = new DisplayButtonBehaviour();
				
			} else {
				buttonBehaviour = new ModeButtonBehaviour();
			}
			
			buttonBehaviours.add(buttonBehaviour);
		}
		
		for (simulator.config.ModeEntryAction entryAction : mode.getEntryActions()) {
			final EntryAction action = new ChangeDisplayAction(((simulator.config.ChangeDisplay)entryAction).getText());
			entryActions.add(action);
		}
	}

	public String getName() {
		return name;
	}
	
	public List<String> getButtonNames() {
		final List<String> names = new LinkedList<String>();
		
		for (ButtonBehaviour buttonBehaviour : buttonBehaviours) {
			names.add(buttonBehaviour.getName());
		}
		
		return names;
	}
	
	public void pressButton(int index) {
		buttonBehaviours.get(index).run();
	}

	public void setWatch(Watch watch) {
		this.watch = watch;
		
		for (ButtonBehaviour buttonBehaviour : buttonBehaviours) {
			buttonBehaviour.setWatch(watch);
		}
	}

	public void enter() {
		for (EntryAction entryAction : entryActions) {
			entryAction.run(watch);
		}
	}
}
