/*******************************************************************************
 * Copyright (c) 2011 The University of York.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Louis Rose - initial API and implementation
 ******************************************************************************/
package simulator.model;

import java.io.Serializable;
import java.util.Arrays;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;

public class Modes implements Serializable {

	// Generated by Eclipse
	private static final long serialVersionUID = 8324759977536834974L;
	
	private final List<Mode> modes;
	private Mode currentMode;
	
	public Modes(Mode... modes) {
		this(Arrays.asList(modes));
	}
	
	public Modes(Collection<Mode> modes) {
		this.modes = new LinkedList<Mode>(modes);
		currentMode = this.modes.get(0);
	}

	public Mode getCurrentMode() {
		return currentMode;
	}

	public String nextMode() {
		final int nextIndex = (modes.indexOf(currentMode) + 1) % modes.size();
		currentMode = modes.get(nextIndex);
		currentMode.enter();
		return currentMode.getName();
	}
	
	public void pressButton(int index) {
		currentMode.pressButton(index);
	}

	public void setWatch(Watch watch) {
		for (Mode mode : modes) {
			mode.setWatch(watch);
		}
	}

	public TimeVariable getTimeVariable(String variableName) {
		return currentMode.getTimeVariable(variableName);
	}

	public Displayable getConstant(String value) {
		return currentMode.getConstant(value);
	}
}
