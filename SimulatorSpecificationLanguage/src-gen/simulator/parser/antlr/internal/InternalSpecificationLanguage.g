/*
* generated by Xtext
*/
grammar InternalSpecificationLanguage;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package simulator.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package simulator.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import simulator.services.SpecificationLanguageGrammarAccess;

}

@parser::members {

 	private SpecificationLanguageGrammarAccess grammarAccess;
 	
    public InternalSpecificationLanguageParser(TokenStream input, IAstFactory factory, SpecificationLanguageGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("simulator/parser/antlr/internal/InternalSpecificationLanguage.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Specification";	
   	}
   	
   	@Override
   	protected SpecificationLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSpecification
entryRuleSpecification returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSpecificationRule(), currentNode); }
	 iv_ruleSpecification=ruleSpecification 
	 { $current=$iv_ruleSpecification.current; } 
	 EOF 
;

// Rule Specification
ruleSpecification returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getSpecificationAccess().getSpecificationAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSpecificationAccess().getSpecificationAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'Specification' 
    {
        createLeafNode(grammarAccess.getSpecificationAccess().getSpecificationKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getSpecificationAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'testcases' 
    {
        createLeafNode(grammarAccess.getSpecificationAccess().getTestcasesKeyword_3_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getSpecificationAccess().getLeftCurlyBracketKeyword_3_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSpecificationAccess().getTestcasesTestcaseParserRuleCall_3_2_0(), currentNode); 
	    }
		lv_testcases_5_0=ruleTestcase		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpecificationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"testcases",
	        		lv_testcases_5_0, 
	        		"Testcase", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getSpecificationAccess().getCommaKeyword_3_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSpecificationAccess().getTestcasesTestcaseParserRuleCall_3_3_1_0(), currentNode); 
	    }
		lv_testcases_7_0=ruleTestcase		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSpecificationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"testcases",
	        		lv_testcases_7_0, 
	        		"Testcase", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getSpecificationAccess().getRightCurlyBracketKeyword_3_4(), null); 
    }
)?	'}' 
    {
        createLeafNode(grammarAccess.getSpecificationAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConditionRule(), currentNode); }
	 iv_ruleCondition=ruleCondition 
	 { $current=$iv_ruleCondition.current; } 
	 EOF 
;

// Rule Condition
ruleCondition returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getConditionAccess().getSetModeParserRuleCall(), currentNode); 
    }
    this_SetMode_0=ruleSetMode
    { 
        $current = $this_SetMode_0.current; 
        currentNode = currentNode.getParent();
    }

;





// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getActionRule(), currentNode); }
	 iv_ruleAction=ruleAction 
	 { $current=$iv_ruleAction.current; } 
	 EOF 
;

// Rule Action
ruleAction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getActionAccess().getPressButtonParserRuleCall(), currentNode); 
    }
    this_PressButton_0=rulePressButton
    { 
        $current = $this_PressButton_0.current; 
        currentNode = currentNode.getParent();
    }

;





// Entry rule entryRuleObservation
entryRuleObservation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getObservationRule(), currentNode); }
	 iv_ruleObservation=ruleObservation 
	 { $current=$iv_ruleObservation.current; } 
	 EOF 
;

// Rule Observation
ruleObservation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getObservationAccess().getObserveModeParserRuleCall_0(), currentNode); 
    }
    this_ObserveMode_0=ruleObserveMode
    { 
        $current = $this_ObserveMode_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getObservationAccess().getObserveBindingParserRuleCall_1(), currentNode); 
    }
    this_ObserveBinding_1=ruleObserveBinding
    { 
        $current = $this_ObserveBinding_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getObservationAccess().getObserveDisplayParserRuleCall_2(), currentNode); 
    }
    this_ObserveDisplay_2=ruleObserveDisplay
    { 
        $current = $this_ObserveDisplay_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleTestcase
entryRuleTestcase returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTestcaseRule(), currentNode); }
	 iv_ruleTestcase=ruleTestcase 
	 { $current=$iv_ruleTestcase.current; } 
	 EOF 
;

// Rule Testcase
ruleTestcase returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'Testcase' 
    {
        createLeafNode(grammarAccess.getTestcaseAccess().getTestcaseKeyword_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getTestcaseAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
	'given' 
    {
        createLeafNode(grammarAccess.getTestcaseAccess().getGivenKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTestcaseAccess().getGivenGivenParserRuleCall_3_0(), currentNode); 
	    }
		lv_given_3_0=ruleGiven		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTestcaseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"given",
	        		lv_given_3_0, 
	        		"Given", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'when' 
    {
        createLeafNode(grammarAccess.getTestcaseAccess().getWhenKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTestcaseAccess().getWhenWhenParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_when_5_0=ruleWhen		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTestcaseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"when",
	        		lv_when_5_0, 
	        		"When", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'then' 
    {
        createLeafNode(grammarAccess.getTestcaseAccess().getThenKeyword_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getTestcaseAccess().getThenThenParserRuleCall_6_0(), currentNode); 
	    }
		lv_then_7_0=ruleThen		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTestcaseRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"then",
	        		lv_then_7_0, 
	        		"Then", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getTestcaseAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleGiven
entryRuleGiven returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGivenRule(), currentNode); }
	 iv_ruleGiven=ruleGiven 
	 { $current=$iv_ruleGiven.current; } 
	 EOF 
;

// Rule Given
ruleGiven returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'Given' 
    {
        createLeafNode(grammarAccess.getGivenAccess().getGivenKeyword_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getGivenAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
	'conditions' 
    {
        createLeafNode(grammarAccess.getGivenAccess().getConditionsKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getGivenAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGivenAccess().getConditionsConditionParserRuleCall_4_0(), currentNode); 
	    }
		lv_conditions_4_0=ruleCondition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGivenRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"conditions",
	        		lv_conditions_4_0, 
	        		"Condition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getGivenAccess().getCommaKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGivenAccess().getConditionsConditionParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_conditions_6_0=ruleCondition		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGivenRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"conditions",
	        		lv_conditions_6_0, 
	        		"Condition", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getGivenAccess().getRightCurlyBracketKeyword_6(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getGivenAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleWhen
entryRuleWhen returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getWhenRule(), currentNode); }
	 iv_ruleWhen=ruleWhen 
	 { $current=$iv_ruleWhen.current; } 
	 EOF 
;

// Rule When
ruleWhen returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'When' 
    {
        createLeafNode(grammarAccess.getWhenAccess().getWhenKeyword_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getWhenAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
	'actions' 
    {
        createLeafNode(grammarAccess.getWhenAccess().getActionsKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getWhenAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWhenAccess().getActionsActionParserRuleCall_4_0(), currentNode); 
	    }
		lv_actions_4_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWhenRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_4_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getWhenAccess().getCommaKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getWhenAccess().getActionsActionParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_actions_6_0=ruleAction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getWhenRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"actions",
	        		lv_actions_6_0, 
	        		"Action", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getWhenAccess().getRightCurlyBracketKeyword_6(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getWhenAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleThen
entryRuleThen returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getThenRule(), currentNode); }
	 iv_ruleThen=ruleThen 
	 { $current=$iv_ruleThen.current; } 
	 EOF 
;

// Rule Then
ruleThen returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'Then' 
    {
        createLeafNode(grammarAccess.getThenAccess().getThenKeyword_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getThenAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
	'observations' 
    {
        createLeafNode(grammarAccess.getThenAccess().getObservationsKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getThenAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getThenAccess().getObservationsObservationParserRuleCall_4_0(), currentNode); 
	    }
		lv_observations_4_0=ruleObservation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getThenRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"observations",
	        		lv_observations_4_0, 
	        		"Observation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getThenAccess().getCommaKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getThenAccess().getObservationsObservationParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_observations_6_0=ruleObservation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getThenRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"observations",
	        		lv_observations_6_0, 
	        		"Observation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getThenAccess().getRightCurlyBracketKeyword_6(), null); 
    }
	'}' 
    {
        createLeafNode(grammarAccess.getThenAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleSetMode
entryRuleSetMode returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSetModeRule(), currentNode); }
	 iv_ruleSetMode=ruleSetMode 
	 { $current=$iv_ruleSetMode.current; } 
	 EOF 
;

// Rule SetMode
ruleSetMode returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getSetModeAccess().getSetModeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSetModeAccess().getSetModeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'SetMode' 
    {
        createLeafNode(grammarAccess.getSetModeAccess().getSetModeKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getSetModeAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'mode' 
    {
        createLeafNode(grammarAccess.getSetModeAccess().getModeKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSetModeAccess().getModeEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_mode_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSetModeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"mode",
	        		lv_mode_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getSetModeAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEStringRule(), currentNode); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    createLeafNode(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0(), null); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    createLeafNode(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1(), null); 
    }
)
    ;





// Entry rule entryRulePressButton
entryRulePressButton returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPressButtonRule(), currentNode); }
	 iv_rulePressButton=rulePressButton 
	 { $current=$iv_rulePressButton.current; } 
	 EOF 
;

// Rule PressButton
rulePressButton returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getPressButtonAccess().getPressButtonAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getPressButtonAccess().getPressButtonAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'PressButton' 
    {
        createLeafNode(grammarAccess.getPressButtonAccess().getPressButtonKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getPressButtonAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'button' 
    {
        createLeafNode(grammarAccess.getPressButtonAccess().getButtonKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPressButtonAccess().getButtonEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_button_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPressButtonRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"button",
	        		lv_button_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getPressButtonAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleObserveMode
entryRuleObserveMode returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getObserveModeRule(), currentNode); }
	 iv_ruleObserveMode=ruleObserveMode 
	 { $current=$iv_ruleObserveMode.current; } 
	 EOF 
;

// Rule ObserveMode
ruleObserveMode returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getObserveModeAccess().getObserveModeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getObserveModeAccess().getObserveModeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'ObserveMode' 
    {
        createLeafNode(grammarAccess.getObserveModeAccess().getObserveModeKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getObserveModeAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'mode' 
    {
        createLeafNode(grammarAccess.getObserveModeAccess().getModeKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getObserveModeAccess().getModeEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_mode_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObserveModeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"mode",
	        		lv_mode_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getObserveModeAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





// Entry rule entryRuleObserveBinding
entryRuleObserveBinding returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getObserveBindingRule(), currentNode); }
	 iv_ruleObserveBinding=ruleObserveBinding 
	 { $current=$iv_ruleObserveBinding.current; } 
	 EOF 
;

// Rule ObserveBinding
ruleObserveBinding returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getObserveBindingAccess().getObserveBindingAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getObserveBindingAccess().getObserveBindingAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'ObserveBinding' 
    {
        createLeafNode(grammarAccess.getObserveBindingAccess().getObserveBindingKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getObserveBindingAccess().getNameEStringParserRuleCall_2_0(), currentNode); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObserveBindingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getObserveBindingAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(	'button' 
    {
        createLeafNode(grammarAccess.getObserveBindingAccess().getButtonKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getObserveBindingAccess().getButtonEStringParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_button_5_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObserveBindingRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"button",
	        		lv_button_5_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getObserveBindingAccess().getRightCurlyBracketKeyword_5(), null); 
    }
)
;





// Entry rule entryRuleObserveDisplay
entryRuleObserveDisplay returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getObserveDisplayRule(), currentNode); }
	 iv_ruleObserveDisplay=ruleObserveDisplay 
	 { $current=$iv_ruleObserveDisplay.current; } 
	 EOF 
;

// Rule ObserveDisplay
ruleObserveDisplay returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getObserveDisplayAccess().getObserveDisplayAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getObserveDisplayAccess().getObserveDisplayAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'ObserveDisplay' 
    {
        createLeafNode(grammarAccess.getObserveDisplayAccess().getObserveDisplayKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getObserveDisplayAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'value' 
    {
        createLeafNode(grammarAccess.getObserveDisplayAccess().getValueKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getObserveDisplayAccess().getValueEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObserveDisplayRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getObserveDisplayAccess().getRightCurlyBracketKeyword_4(), null); 
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


